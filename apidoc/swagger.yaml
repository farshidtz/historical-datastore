openapi: 3.0.0
info:
  title: LinkSmart Historical Datastore
  description: LinkSmartÂ® Historical Datastore (HDS) is a modular service for time-series
    data storage. This stores sensor measurements in senml formats. Data API takes
    care of creating and accessing sensor measurements. Registry APIs manage metadata
    corresponding to the sensor measurements
  version: v1.0.0-beta.1
servers:
- url: /
tags:
- name: registry
  description: Registry API
- name: data
  description: Data API
paths:
  /registry/:
    get:
      tags:
      - registry
      description: Returns all the registries present in the datastore
      operationId: findseries
      parameters:
      - name: page
        in: query
        description: Page number in the pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: per_page
        in: query
        description: Number of entries per page
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: If-Modified-Since
        in: header
        description: Conditional request based on date
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStream'
        304:
          description: Not Modified (since `If-Modified-Since`)
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - registry
      summary: Creates new `DataStream`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStream'
        required: true
      responses:
        201:
          description: Created Successfully
          headers:
            Location:
              description: URL of the newly created Datasource
              style: simple
              explode: false
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registry/{name}:
    get:
      tags:
      - registry
      summary: Retrieves a `Datasource` object
      parameters:
      - name: name
        in: path
        description: ID of the `Datasource`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStream'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - registry
      summary: Updates the `Datasource`
      parameters:
      - name: name
        in: path
        description: ID of the `Datasource`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStream'
        required: true
      responses:
        200:
          description: Datasource updated successfully
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - registry
      summary: Deletes the `DataStream`
      parameters:
      - name: name
        in: path
        description: ID of the `Datasource`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registry/{type}/{path}/{op}/{value}:
    get:
      tags:
      - registry
      summary: Datasource filtering API
      parameters:
      - name: type
        in: path
        description: The expected type of response (one or many)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: path
        description: Dot-separated path in the registration JSON
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: op
        in: path
        description: One of (equals, prefix, suffix, contains) string comparison operations
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: value
        in: path
        description: The intended value/prefix/suffix/substring of the key identified
          by the path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number in the pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: per_page
        in: query
        description: Number of entries per page
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      responses:
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /data/{name}:
    get:
      tags:
      - data
      summary: Retrieve a part of datastream based on Query
      parameters:
      - name: name
        in: path
        description: name of the `DataStream`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: per_page
        in: query
        description: Number of entries per page
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: from
        in: query
        description: from time
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: to time
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: sort
        in: query
        description: sorting method
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
    post:
      tags:
      - data
      summary: Submits `senmlPack`
      parameters:
      - name: name
        in: path
        description: name of the `Datasource`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: MIME Type of dataset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "Dataset to be submitted. \n\nThe dataset is a [SenML](https://tools.ietf.org/html/rfc8428)\
          \ object.\n"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SenmlPack'
        required: true
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    DataStream:
      required:
      - name
      properties:
        name:
          type: string
          example: IZB/C5/125/avgtemp
        source:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/MQTTSource'
        dataType:
          pattern: string|float|bool|data
          type: string
        meta:
          $ref: '#/components/schemas/DataStream_meta'
        retain:
          $ref: '#/components/schemas/DataStream_retain'
    MQTTSource:
      required:
      - topic
      - uri
      type: object
      properties:
        type:
          pattern: MQTT
          type: string
        url:
          type: string
          example: tcp://example.com:1883
        topic:
          type: string
          example: LS/#/temperature
        qos:
          type: integer
        username:
          type: string
        password:
          type: string
        caFile:
          type: string
        certFile:
          type: string
        keyFile:
          type: string
    SenmlPack:
      type: array
      items:
        $ref: '#/components/schemas/SenmlPack_inner'
    Error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    inline_response_200:
      type: object
      properties:
        selfLink:
          type: string
          description: link to fetch the current response
        took:
          type: number
          description: Time taken in seconds
        nextLink:
          type: string
          description: when the total entries exceed current limit of "perPage", the
            nextLink has the link to next page
        data:
          $ref: '#/components/schemas/SenmlPack'
    DataStream_meta:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    DataStream_retain:
      type: object
      properties:
        min:
          type: string
          example: 1day
        max:
          type: string
          example: 30day
    SenmlPack_inner:
      type: object
      properties:
        bn:
          type: string
        bt:
          type: integer
          format: double
        bu:
          type: string
        bver:
          type: integer
        n:
          type: string
        t:
          type: integer
          format: double
        u:
          type: string
        v:
          type: number
          format: double
        vs:
          type: string
        vb:
          type: boolean
  responses:
    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    notfound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    methodNotAllowed:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    unsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    internalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    page:
      name: page
      in: query
      description: Page number in the pagination
      required: false
      style: form
      explode: true
      schema:
        minimum: 1
        type: integer
    perPage:
      name: per_page
      in: query
      description: Number of entries per page
      required: false
      style: form
      explode: true
      schema:
        minimum: 1
        type: integer
    from:
      name: from
      in: query
      description: from time
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
    to:
      name: to
      in: query
      description: to time
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
    sort:
      name: sort
      in: query
      description: sorting method
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date